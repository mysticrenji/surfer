{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "surfer.fullname" . }}-postgres
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "surfer.postgresql.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "surfer.postgresql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "surfer.postgresql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
          {{- if .Values.postgresql.persistence.enabled }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
      {{- if .Values.postgresql.persistence.enabled }}
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "surfer.fullname" . }}-postgres-pvc
      {{- end }}
{{- end }}
